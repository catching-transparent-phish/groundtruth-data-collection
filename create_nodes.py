import os, argparse, sys, shutil
from src.aws_lightsail import aws_lightsail
from src.hostsFileCreator import create_hosts_file

def spin_up_nodes(configPath):
    lightsail = aws_lightsail(configPath)
    ips = lightsail.create_instances()
    with open('inventory', 'w') as f:
        f.write('[apache]\n')
        for ip, name in ips:
            f.write('%s ansible_python_interpreter=/usr/bin/python3 node_name=%s\n' % (ip, name))
    return ips

def prepare_apache_config_files(domain):
    with open("inputFiles/apache/default.conf.example", "r") as fin:
        with open("inputFiles/apache/default.conf", "w") as fout:
            for line in fin:
                fout.write(line.replace("example.com", domain))

    with open("inputFiles/apache/default-ssl.conf.example", "r") as fin:
        with open("inputFiles/apache/default-ssl.conf", "w") as fout:
            for line in fin:
                fout.write(line.replace("example.com", domain))

def start_experiment(domain, awsConfigPath):
    # 1. Create aws nodes from supplied configuration file
    ips = spin_up_nodes(awsConfigPath)
    ips = [ip[0] for ip in ips]

    # 2. Create hosts file IPs generated by the aws script
    create_hosts_file(ips, domain)

    # 3. Change the domain in the apache configuration files
    prepare_apache_config_files(domain)

def process_args():
    programDescription = "Spinup aws nodes and start groudtruth data collection using them"
    parser = argparse.ArgumentParser(description=programDescription)

    parser.add_argument("--aws-config-file", action="store",
                        help="Location AWS configuration file", default="aws_config.csv")
    parser.add_argument("-d", "--domain", action="store",
                        help="Domain to be used for experiment")

    args = parser.parse_args()
    if(not args.domain):
        parser.print_help(sys.stderr)
        sys.exit(1)
    return args

if __name__ == '__main__':
    args = process_args()
    start_experiment(args.domain, args.aws_config_file)
